
plugins {
	id 'base'
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.3"
	id 'jacoco'
	id 'application'
}

mainClassName = 'DriveQuickstart'
targetCompatibility = 17

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

group = 'ivantiAppMarkt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {


	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'mysql:mysql-connector-java:8.0.28'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core:8.5.10'
	implementation 'org.flywaydb:flyway-mysql:8.5.10'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.1.1'
	implementation 'ch.qos.logback:logback-classic:1.2.11'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.projectlombok:lombok:1.18.24'
	implementation 'junit:junit:4.13.1'
	implementation 'com.google.api-client:google-api-client:1.34.1'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.33.2'
	implementation 'com.google.apis:google-api-services-drive:v3-rev20220508-1.32.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.mockito:mockito-core:4.5.1'
	testImplementation ('org.springframework.boot:spring-boot-starter-test'){
		exclude group: 'org.junit.vintage', module:'junit-vintage-engine'}
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
	testImplementation 'com.h2database:h2'
	testCompileOnly("junit:junit")


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}

	tasks.named('test') {
		useJUnitPlatform()
	}

	jacocoTestReport {
		reports {
			xml.enabled true
		}
	}
	test.finalizedBy jacocoTestReport


	tasks.named('sonarqube').configure {
		dependsOn test
	}
}
